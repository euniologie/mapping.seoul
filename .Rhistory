iris.num <- cbind(iris.num, iris[,i])
}
}
View(iris.num)
tab(iris.num)
str(iris.num)
str(iris.num)
print(iris.num)
sapply(iris, is.numeric)
sapply(iris, is.factor)
iris.num2 <- iris[,sapply(iris, is.numeric)]
print(iris.num2)
str(iris.num2)
view(iris.num2)
install.packages("view")
view(iris.num2)
install.packages("view")
if(rnorm(1)>0) {
print(paste("the sum is", sum(x.r)))
} else {
print(paste("the mean is", mean(x.r)))
}
squares <- function(x) {
y <- x^2
return(y)
}
squares(2)
squares(4)
squares(11)
denominator <- sd(x)
x <- rnorm(100)
normalize <- function(x) {
numerator <- x-mean(x) #demean
denominator <- sd(x)
norm <- numerator/denominator
return(norm)
}
x <-  rnorm(n    =100,
mean =5,
sd   =3)
print(x)
hist(x)
normalize(x)
hist(x)
hist(x)
x <-  rnorm(n    =100,
mean =5,
sd   =3)
print(x)
hist(x)
normalize(x)
hist(x)
x <-  rnorm(n    =100,
mean =5,
sd   =3)
rm(x)
x <-  rnorm(n    =100,
mean =5,
sd   =3)
print(x)
hist(x)
normalize(x)
hist(x)
rm(x)
x <-  rnorm(n    =100,
mean =5,
sd   =3)
print(x)
hist(x)
x.n <- normalize(x)
hist(x.n)
mean(x.n)
sd(x.n)
x <- rchisq(n=100, df=5)
hist(x)
x.n.2 <- normalize(x)
hist(x.n.2)
mean(x.n.2)
sd(x.n.2)
rm(list=ls())
data.frame(x)
x <- data.frame(
x1 = 1:10,
x2 = 11:20,
x3 = 21:30
)
class(x)
mode(x)
data("mtcars")
force(mtcars)
View(mtcars)
str(mtcars)
mtcars[1:3,]
mtcars[1:3,]
mtcars[,1:3]
mtcars[1:3, c(3,5)]
rm(list=ls())
library(rvest)
library(dplyr)
URL <-  "https://scholar.google.com/citations?user=PhDDPiUAAAAJ&hl=en"
res <- read_html(URL)
res %>%
html_nodes(pattern) %>%
html_text()
#1st
pattern <-  "#gsc_a_b > tr:nth-child(1) > td.gsc_a_t > a"
res %>%
html_nodes(pattern) %>%
html_text()
#or
pattern <-  "#gsc_a_b > tr > td.gsc_a_t > a"
res %>%
html_nodes(pattern) %>%
html_text()
URL <-  "https://scholar.google.com/citations?user=PhDDPiUAAAAJ&hl=en"
res <- read_html(URL)
#title
pattern <-  "#gsc_a_b > tr:nth-child(1) > td.gsc_a_t > a"
res %>%
html_nodes(pattern) %>%
html_text()
pattern <-  "#gsc_a_b > tr:nth-child(1) > td.gsc_a_c"
res %>%
html_nodes(pattern) %>%
html_text()
pattern <-  "#gsc_a_b > tr:nth-child(1) > td.gsc_a_y"
res %>%
html_nodes(pattern) %>%
html_text()
pattern <-  "#gsc_oci_title_gg > div > a"
res %>%
html_nodes(pattern) %>%
html_attr("href")
pattern <-  "#gsc_oci_title_gg > div > a"
res %>%
html_nodes(pattern) %>%
html_attr("href")
pattern <-  "#gsc_a_b > tr:nth-child(1) > td.gsc_a_t > a"
res %>%
html_nodes(pattern) %>%
html_attr("href")
#title
pattern <-  "#gsc_a_b > tr > td.gsc_a_t > a"
title <- res %>%
html_nodes(pattern) %>%
html_text()
pattern <-  "#gsc_a_b > tr > td.gsc_a_c"
citation <- res %>%
html_nodes(pattern) %>%
html_text()
#year
pattern <-  "#gsc_a_b > tr > td.gsc_a_y"
year <- res %>%
html_nodes(pattern) %>%
html_text()
pattern <-  "#gsc_a_b > tr > td.gsc_a_t > a"
res %>%
html_nodes(pattern) %>%
html_attr("href")
link <- res %>%
html_nodes(pattern) %>%
html_attr("href")
tab <- cbind(title, citation, year, link)
class(tab)
as.data.frame(tab)
class(tab)
tab <- cbind(title, citation, year, link) %>%
as.data.frame()
class(tab)
View(tab)
URL <- https://scholar.google.com/citations?user=qZpr_CQAAAAJ&hl=en
URL <- "https://scholar.google.com/citations?user=qZpr_CQAAAAJ&hl=en"
res <- read_html(URL)
tab <- res %>%
html_table()
df <- tab[[2]]
tab <- res %>%
html_table()
df <- tab
names(df) <- c("title", "citation", "year")
rm(tab)
res %>%
html_table()
tab <- res %>%
html_table() %>%
.[[2]]
names(tab) <- c("title", "citation", "year")
tab <- tab %>% slice(-1)
head(tab)
link <- res %>%
html_nodes(pattern) %>%
html_attr("href") %>%
str_c("https://scholar.google.com/", .)
link <- res %>%
html_nodes(pattern) %>%
html_attr("href") %>%
# str_c("https://scholar.google.com/", .) %>%
paste0("hrrps://scholar.google.com/", .)
#title
pattern <-  "#gsc_a_b > tr > td.gsc_a_t > a"
title <- res %>%
html_nodes(pattern) %>%
html_text()
pattern <-  "#gsc_a_b > tr > td.gsc_a_c"
citation <- res %>%
html_nodes(pattern) %>%
html_text()
#year
pattern <-  "#gsc_a_b > tr > td.gsc_a_y"
year <- res %>%
html_nodes(pattern) %>%
html_text()
pattern <-  "#gsc_a_b > tr > td.gsc_a_t > a"
link <- res %>%
html_nodes(pattern) %>%
html_attr("href") %>%
# str_c("https://scholar.google.com/", .) %>%
paste0("hrrps://scholar.google.com/", .)
tab <- cbind(title, citation, year, link)
class(tab)
tab <- cbind(title, citation, year, link) %>%
as.data.frame()
class(tab)
tab
View(tab)
pattern <-  "#gsc_a_b > tr > td.gsc_a_t > a"
link <- res %>%
html_nodes(pattern) %>%
html_attr("href") %>%
# str_c("https://scholar.google.com", .) %>%
paste0("https://scholar.google.com", .)
tab <- cbind(title, citation, year, link)
class(tab)
tab <- cbind(title, citation, year, link) %>%
as.data.frame()
class(tab)
tab
library(httr)
BROWSE(link[1])
rm(tab)
#title
pattern <-  "#gsc_a_b > tr > td.gsc_a_t > a"
title <- res %>%
html_nodes(pattern) %>%
html_text()
pattern <-  "#gsc_a_b > tr > td.gsc_a_c"
citation <- res %>%
html_nodes(pattern) %>%
html_text()
#year
pattern <-  "#gsc_a_b > tr > td.gsc_a_y"
year <- res %>%
html_nodes(pattern) %>%
html_text()
pattern <-  "#gsc_a_b > tr > td.gsc_a_t > a"
link <- res %>%
html_nodes(pattern) %>%
html_attr("href") %>%
# str_c("https://scholar.google.com", .) %>%
paste0("https://scholar.google.com", .)
tab <- cbind(title, citation, year, link)
class(tab)
tab <- cbind(title, citation, year, link) %>%
as.data.frame()
class(tab)
tab
library(httr)
BROWSE(link[1])
URL <-  https://www.ted.com/talks
URL <-  "https://www.ted.com/talks"
res <- read_html(URL)
#speaker
pattern <-  "#browse-results > div.row.row-sm-4up.row-lg-6up.row-skinny > div:nth-child(4) > div > div > div > div.media__message > h4.h12.talk-link__speaker"
speaker <- res %>%
html_nodes(pattern) %>%
html_text()
#title
pattern <-  "#browse-results > div.row.row-sm-4up.row-lg-6up.row-skinny > div:nth-child(4) > div > div > div > div.media__message > h4.f-w\:700.h9.m5 > a"
#speaker
pattern <-  "#browse-results > div.row.row-sm-4up.row-lg-6up.row-skinny > div:nth-child(4) > div > div > div > div.media__message > h4.h12.talk-link__speaker"
speaker <- res %>%
html_nodes(pattern) %>%
html_text()
#title
pattern <-  "#browse-results > div.row.row-sm-4up.row-lg-6up.row-skinny > div:nth-child(4) > div > div > div > div.media__message > h4.f-w\:700.h9.m5 > a"
title <- res %>%
html_nodes(pattern) %>%
html_text()
#date
pattern <-  "#browse-results > div.row.row-sm-4up.row-lg-6up.row-skinny > div:nth-child(4) > div > div > div > div.media__message > div > span > span"
speaker <- res %>%
html_nodes(pattern) %>%
html_text()
URL <-  "https://www.ted.com/talks"
res <- read_html(URL)
pattern <- ".talk-link__speaker"
source("~/.active-rstudio-document", echo=TRUE)
res %>%
html_nodes(pattern) %>%
html_text()
speaker.gadget <- res %>%
html_nodes(pattern) %>%
html_text()
speaker.gadget <- res %>%
html_nodes(pattern) %>%
html_text() %>% as.data.frame()
View(speaker.gadget)
#
library(dplyr)
x1 <- rnorm(10)
x2 <- rnorm(10)
x3 <- rnorm(10)
tab <- cbind(x1, x2, x3)
df <- cbind(x1, x2, x3) %>% as.data.frame()
tbbl <- cbind(x1, x2, x3) %>% as_tibble()
class(tab)
class(df)
class(tibble)
library(rvest)
library(dplyr)
url <- "https://iseoul.seoul.go.kr/portal/info/preSchoolList.do?pageIndex=1"
res <- read_html(url)
Sys.setlocale("LC_ALL", "C") # 한글 인코딩 이슈 우회
tab <- res %>%
html_table() %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
Sys.setlocale("LC_ALL", "EUC-KR", "UTF-8") # 한글 인코딩 이슈 우회
Sys.setlocale("LC_ALL", "en.UTF-8") # 한글 인코딩 이슈 우회
Sys.setlocale("LC_ALL", "en_US.UTF-8") # 한글 인코딩 이슈 우회
tab <- res %>%
html_table() %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
Sys.setlocale("LC_ALL", "en_US.UTF-8")
View(tab)
View(res)
tab <- res %>%
html_table() %>%
.[[2]]
tab <- res %>%
html_table() %>%
.[[1]]
tab <- res %>%
html_table() %>%
Sys.setlocale("LC_ALL", "en_US.UTF-8")
tab <- res %>%
html_table() %>%
Sys.setlocale("LC_ALL", "en_US.UTF-8")
Sys.setlocale("LC_ALL", "en_US.UTF-8") # 한글 인코딩 이슈 우회
tab <- res %>%
html_table() %>%
Sys.setlocale("LC_ALL", "en_US.UTF-8")
tab <- res %>%
html_table() %>%
.[[1]]
URL <- "https://www.newyorker.com/?_gl=1*1w9b38t*_ga*MTYxODU5MzUzOC4xNjM4NTE4NjQ1*_ga_261YVXH13D*MTY0MTM5MjYxNi4yLjEuMTY0MTM5Mzc1OC42MA.."
res <- read_html(URL)
pattern <- "#app-root > div > div.PersistentTopWrapper-jtkmXQ.goBUAB.persistent-top > header > div.grid.grid-items-0.StackedNavigationGrid-dzKoiE.eFFVpY > div.StackedNavigationTop-ieOldb.lcdzgk.grid--item"
## 기사 제목
res %>%
html_nodes(pattern) %>%
html_text()
pattern <- "#main-content > div.MultiPackageContainer-ceMeXJ.gfjZNz.multi-packages > div:nth-child(2) > div > div > div.SummaryCollageFourWrapper-cdpzZr.eBnONH.summary-collage-four.SummaryCollageNineSummaryCollageFour-djSuwj.dXdOmy > div.GridScWrapper-JRsQW.bVpXUO.grid.grid-margins.grid-margin-only.grid-items-0.SummaryListWrapper-emnITA.dElBnX.summary-list.SummaryCollageFourSummaryListItem-gfZQsT.eBZGgC.summary-collage-four__summary-list-item.summary-list--collection-list > div > div > div > div:nth-child(1) > div.summary-item__asset-container > a > span > div"
## 기사 제목
res %>%
html_nodes(pattern) %>%
html_text()
## 기사 링크
res %>%
html_nodes(pattern) %>%
html_attr("href")
pattern <- "#main-content > div.MultiPackageContainer-ceMeXJ.gfjZNz.multi-packages > div:nth-child(2) > div > div"
## 기사 제목
res %>%
html_nodes(pattern) %>%
html_text()
## 기사 링크
res %>%
html_nodes(pattern) %>%
html_attr("href")
pattern <- "#main-content > div.MultiPackageContainer-ceMeXJ.gfjZNz.multi-packages > div:nth-child(2) > div > div > div.SummaryCollageFourWrapper-cdpzZr.eBnONH.summary-collage-four.SummaryCollageNineSummaryCollageFour-djSuwj.dXdOmy > div.GridScWrapper-JRsQW.bVpXUO.grid.grid-margins.grid-margin-only.grid-items-0.SummaryListWrapper-emnITA.dElBnX.summary-list.SummaryCollageFourSummaryListItem-gfZQsT.eBZGgC.summary-collage-four__summary-list-item.summary-list--collection-list > div > div > div > div:nth-child(1) > div.summary-item__content > a > h2"
## 기사 제목
res %>%
html_nodes(pattern) %>%
html_text()
## 기사 링크
res %>%
html_nodes(pattern) %>%
html_attr("href")
pattern <- #main-content > div.MultiPackageContainer-ceMeXJ.gfjZNz.multi-packages > div:nth-child(2) > div > div > div.SummaryCollageFourWrapper-cdpzZr.eBnONH.summary-collage-four.SummaryCollageNineSummaryCollageFour-djSuwj.dXdOmy > div.GridScWrapper-JRsQW.bVpXUO.grid.grid-margins.grid-margin-only.grid-items-0.SummaryListWrapper-emnITA.dElBnX.summary-list.SummaryCollageFourSummaryListItem-gfZQsT.eBZGgC.summary-collage-four__summary-list-item.summary-list--collection-list > div > div > div > div:nth-child(1) > div.summary-item__content > a
## 기사 링크
res %>%
html_nodes(pattern) %>%
html_attr("href")
pattern <- #main-content > div.MultiPackageContainer-ceMeXJ.gfjZNz.multi-packages > div:nth-child(2) > div > div > div.SummaryCollageFourWrapper-cdpzZr.eBnONH.summary-collage-four.SummaryCollageNineSummaryCollageFour-djSuwj.dXdOmy > div.GridScWrapper-JRsQW.bVpXUO.grid.grid-margins.grid-margin-only.grid-items-0.SummaryListWrapper-emnITA.dElBnX.summary-list.SummaryCollageFourSummaryListItem-gfZQsT.eBZGgC.summary-collage-four__summary-list-item.summary-list--collection-list > div > div > div > div:nth-child(1) > div.summary-item__content > a
## 기사 링크
res %>%
html_nodes(pattern) %>%
html_attr("href")
pattern <- #main-content > div.MultiPackageContainer-ceMeXJ.gfjZNz.multi-packages > div:nth-child(2) > div > div > div.SummaryCollageFourWrapper-cdpzZr.eBnONH.summary-collage-four.SummaryCollageNineSummaryCollageFour-djSuwj.dXdOmy > div.GridScWrapper-JRsQW.bVpXUO.grid.grid-margins.grid-margin-only.grid-items-0.SummaryListWrapper-emnITA.dElBnX.summary-list.SummaryCollageFourSummaryListItem-gfZQsT.eBZGgC.summary-collage-four__summary-list-item.summary-list--collection-list > div > div > div > div:nth-child(1) > div.summary-item__content > a
## 기사 링크
res %>%
html_nodes(pattern) %>%
html_attr("#main-content > div.MultiPackageContainer-ceMeXJ.gfjZNz.multi-packages > div:nth-child(2) > div > div > div.SummaryCollageFourWrapper-cdpzZr.eBnONH.summary-collage-four.SummaryCollageNineSummaryCollageFour-djSuwj.dXdOmy > div.GridScWrapper-JRsQW.bVpXUO.grid.grid-margins.grid-margin-only.grid-items-0.SummaryListWrapper-emnITA.dElBnX.summary-list.SummaryCollageFourSummaryListItem-gfZQsT.eBZGgC.summary-collage-four__summary-list-item.summary-list--collection-list > div > div > div > div:nth-child(1) > div.summary-item__content > a")
pattern <- "#main-content > div.MultiPackageContainer-ceMeXJ.gfjZNz.multi-packages > div:nth-child(2) > div > div > div.SummaryCollageFourWrapper-cdpzZr.eBnONH.summary-collage-four.SummaryCollageNineSummaryCollageFour-djSuwj.dXdOmy > div.GridScWrapper-JRsQW.bVpXUO.grid.grid-margins.grid-margin-only.grid-items-0.SummaryListWrapper-emnITA.dElBnX.summary-list.SummaryCollageFourSummaryListItem-gfZQsT.eBZGgC.summary-collage-four__summary-list-item.summary-list--collection-list > div > div > div > div:nth-child(1) > div.summary-item__content > a > h2"
## 기사 제목
res %>%
html_nodes(pattern) %>%
html_text()
pattern <- #main-content > div.MultiPackageContainer-ceMeXJ.gfjZNz.multi-packages > div:nth-child(2) > div > div > div.SummaryCollageFourWrapper-cdpzZr.eBnONH.summary-collage-four.SummaryCollageNineSummaryCollageFour-djSuwj.dXdOmy > div.GridScWrapper-JRsQW.bVpXUO.grid.grid-margins.grid-margin-only.grid-items-0.SummaryListWrapper-emnITA.dElBnX.summary-list.SummaryCollageFourSummaryListItem-gfZQsT.eBZGgC.summary-collage-four__summary-list-item.summary-list--collection-list > div > div > div > div:nth-child(1) > div.summary-item__content > a
## 기사 링크
res %>%
html_nodes(pattern) %>%
html_attr("#main-content > div.MultiPackageContainer-ceMeXJ.gfjZNz.multi-packages > div:nth-child(2) > div > div > div.SummaryCollageFourWrapper-cdpzZr.eBnONH.summary-collage-four.SummaryCollageNineSummaryCollageFour-djSuwj.dXdOmy > div.GridScWrapper-JRsQW.bVpXUO.grid.grid-margins.grid-margin-only.grid-items-0.SummaryListWrapper-emnITA.dElBnX.summary-list.SummaryCollageFourSummaryListItem-gfZQsT.eBZGgC.summary-collage-four__summary-list-item.summary-list--collection-list > div > div > div > div:nth-child(1) > div.summary-item__content > a")
URL <- "https://news.naver.com/main/list.nhn?mode=LS2D&mid=shm&sid1=102&sid2=250"
res <- read_html(URL)
pattern <- "#main_content > div.list_body.newsflash_body > ul.type06_headline > li:nth-child(1) > dl > dt > a"
## 기사 제목
res %>%
html_nodes(pattern) %>%
html_text()
## 기사 링크
res %>%
html_nodes(pattern) %>%
html_attr("href")
url <- "https://analytics.google.com/g/collect?v=2&tid=G-P1P55J3LNW&gtm=2oe150&_p=985086285&sr=1440x900&ul=en-us&cid=1618593538.1638518645&dl=/?_gl=1*1w9b38t*_ga*MTYxODU5MzUzOC4xNjM4NTE4NjQ1*_ga_261YVXH13D*MTY0MTM5MjYxNi4yLjEuMTY0MTM5Mzc1OC42MA..&dr=https://subscribe.newyorker.com/&dt=The New Yorker&sid=1641726295&sct=2&seg=1&_s=1"
res <- read_html(url)
res <- read_post(url)
res <- read_html(url)
url <- "https://analytics.google.com/g/collect?v=2&tid=G-P1P55J3LNW&gtm=2oe150&_p=985086285&sr=1440x900&ul=en-us&cid=1618593538.1638518645&dl=/?_gl=1*1w9b38t*_ga*MTYxODU5MzUzOC4xNjM4NTE4NjQ1*_ga_261YVXH13D*MTY0MTM5MjYxNi4yLjEuMTY0MTM5Mzc1OC42MA..&dr=https://subscribe.newyorker.com/&dt=The New Yorker&sid=1641726295&sct=2&seg=1&_s=1"
res <- read_html(url)
URL <- "https://analytics.google.com/g/collect?v=2&tid=G-P1P55J3LNW&gtm=2oe150&_p=985086285&sr=1440x900&ul=en-us&cid=1618593538.1638518645&dl=/?_gl=1*1w9b38t*_ga*MTYxODU5MzUzOC4xNjM4NTE4NjQ1*_ga_261YVXH13D*MTY0MTM5MjYxNi4yLjEuMTY0MTM5Mzc1OC42MA..&dr=https://subscribe.newyorker.com/&dt=The New Yorker&sid=1641726295&sct=2&seg=1&_s=1"
res <- read_html(URL)
### directory setting
getwd()
setwd("~/Desktop/mapping")
### loading files (download packages before loading them)
# you can either use R.data or combine shp and csv files
# I used separate shp and csv files and merged them
library(maptools)
library(readr)
#1.loading shp files
seoul <- readShapePoly("SEOUL.shp")
#2.loading csv files
green.csv <- read_csv("greenery.csv", locale = locale(encoding = "UTF-8"))
green.csv <- read.csv("greenery.csv", , stringsAsFactors = T, na = "-",
encoding = "UTF-8")
colnames(green.csv)[colnames(green.csv) == "greenery_num"] <- "number of greenery"
#3.merge shp and csv files
seoul.sp <- merge(seoul,green.csv)
save(seoul.sp, file="seoul.RData")
load("seoul.Rdata")
### mapping, using "tmap" package
library(tmap)
tmap_mode("view")
map <- tm_shape(seoul.sp)+tm_polygons("number of greenery")
### customizing the map
# 1. adding the title
map + tm_layout(title = "Greenery of Seoul")
# 2. changing the categorization
tm_shape(seoul.sp)+tm_polygons("number of greenery", style="jenks", title ="Number of Greenery")
# 2. changing the categorization
tm_shape(seoul.sp)+tm_polygons("number of greenery", style="quantile", title ="Number of Greenery")
# 3. changing the colors, adding labels on the map
map2 <- tm_shape(seoul.sp) +
tm_polygons(col = "number of greenery", palette = "viridis", title = "Number of Greenery") +
tm_text(text = "SIG_KOR_NM", size = 0.5)
# check out for more palette -> https://www.datanovia.com/en/blog/top-r-color-palettes-to-know-for-great-data-visualization/)
# i couldn't figure out how to edit the label of the bubble that pops up whenever you click the region
map2 + tm_layout(title = "Greenery of Seoul")
### directory setting
getwd()
### directory setting
getwd()
setwd("~/Desktop/mapping_sungeun")
### loading files (download packages before loading them)
# you can either use R.data or combine shp and csv files
# I used separate shp and csv files and merged them
library(maptools)
library(readr)
#1.loading shp files
seoul <- readShapePoly("SEOUL.shp")
#2.loading csv files
green.csv <- read_csv("greenery.csv", locale = locale(encoding = "UTF-8"))
green.csv <- read.csv("greenery.csv", , stringsAsFactors = T, na = "-",
encoding = "UTF-8")
colnames(green.csv)[colnames(green.csv) == "greenery_num"] <- "number of greenery"
#3.merge shp and csv files
seoul.sp <- merge(seoul,green.csv)
save(seoul.sp, file="seoul.RData")
load("seoul.Rdata")
### mapping, using "tmap" package
library(tmap)
map <- tm_shape(seoul.sp)+tm_polygons("number of greenery")
### customizing the map
# 1. adding the title
map + tm_layout(title = "Greenery of Seoul")
tmap_mode("view")
map <- tm_shape(seoul.sp)+tm_polygons("number of greenery")
### customizing the map
# 1. adding the title
map + tm_layout(title = "Greenery of Seoul")
# 2. changing the categorization
tm_shape(seoul.sp)+tm_polygons("number of greenery", style="quantile", title ="Number of Greenery")
# 3. changing the colors, adding labels on the map
map2 <- tm_shape(seoul.sp) +
tm_polygons(col = "number of greenery", palette = "viridis", title = "Number of Greenery") +
tm_text(text = "SIG_KOR_NM", size = 0.5)
# check out for more palette -> https://www.datanovia.com/en/blog/top-r-color-palettes-to-know-for-great-data-visualization/)
# i couldn't figure out how to edit the label of the bubble that pops up whenever you click the region
map2 + tm_layout(title = "Greenery of Seoul")
